#
# Default Centrify DirectControl configuration file.
#
# Debug logging
# Use the /usr/share/centrifydc/bin/addebug utility to turn this on and off
# Note that debug logging may have a significant
# effect on performance, and the log file may quickly become very large
log: INFO

# Audit logging level.  Specifies the logging level for auditing
# messages.  If this parameter is not present, the auditing logging level
# will match that specified with the 'log' parameter.
# log.audit: INFO

# Log Queue size.  Controls the maximum number of messages that will
# be queued before sending them to syslog. Each message consumes
# roughly 100 bytes.  This value is automatically increased by a factor
# of 4 when running in DEBUG mode
#
# logger.queue.size: 256
#

#
# Select the syslog facility.  The default is auth.  Separate
# facilities may be specified for general logging, adclient audit
# logging, and adnisd logging.  If logger.facility.adclient
# is not specified, it defaults to the value for
# logger.facility.*.
#
# This parameter is controlled by the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Logging Settings"
#               -> "Set general audit logging facility"
#
# logger.facility.*: auth

# This parameter is controlled by the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Logging Settings"
#               -> "Set Adclient audit logging facility"
#
# logger.facility.adclient.audit: auth

# This parameter is controlled by the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Logging Settings"
#               -> "Set NIS audit logging facility"
#
# logger.facility.adnisd: auth
#



#
# Speed up lookups for common users who we know aren't in AD
#
# These values are controlled via group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Login Settings"
#               -> "Specify user names to ignore (lookup)"
#               -> "Specify group names to ignore (lookup)"
#
# nss.user.ignore=file:/etc/centrifydc/user.ignore
# nss.group.ignore=file:/etc/centrifydc/group.ignore
nss.user.ignore=file:/etc/centrifydc/user.ignore
nss.group.ignore=file:/etc/centrifydc/group.ignore

#
# To speed up common uid/gid lookup, username/groupname specified in
# nss.user.ignore/nss.group.ignore is automatically converted into
# uid/gid list by adclient.
#
# Note: Adclient always write uid/gid list into file:
#  /etc/centrifydc/uid.ignore and /etc/centrifydc/gid.ignore.
#
# nss.uid.ignore=file:/etc/centrifydc/uid.ignore
# nss.gid.ignore=file:/etc/centrifydc/gid.ignore

#
# Override passwd and group entries for this machine.  This mechanism
# can be used to override specific user and group entries for more fine-grained
# control than zoning.  These entries are best managed through Group Policy
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "NSS Overrides"
#               -> "Specify NSS password overrides"
#               -> "Specify NSS group overrides"
#
# nss.passwd.override: file:/etc/centrifydc/passwd.ovr
# nss.group.override: file:/etc/centrifydc/group.ovr

#
# Retrieving group memberships from Active Directory can be a very
# time consuming and memory intensive operation for groups with large
# numbers of users, or recursive group memberships.  Many Unix commands
# need to map a group id to a name, but are not concerned with the group
# membership.  Unfortunately, the NSS API does not differentiate between
# these two situations. Putting a command in this list tells the nss
# library to skip group member expansion in the getgrent() call.
# This results in tremendous performance improvements for groups with
# large number of members. (Patent Pend.)
#
# The following is the default for most systems
# nss.group.skip.members= ls,chown,find,ps,chgrp,dtaction,dtwm,pt_chmod,adsetgrps,adid,ll
#
# The following is the default for AIX
# nss.group.skip.members= ls,chown,find,ps,chgrp,dtaction,dtwm,pt_chmod,id,login,sshd,sshd2,getty,dtlogin,su,adsetgrps,adid
#

#
# Split up or truncate memberlists larger than 1024 bytes (~125 users).
# This allows Unix utilities to behave correctly when dealing with
# very large groups on operating systems which don't support large groups.
# The default true for Solaris, HPUX and IRIX, false for all others
#
# nss.split.group.membership: true
#

#
# Present the Unix password hash in the getpw* response.  The default is
# false since this is typically considered sensitive information and is
# vulnerable to brute force attack.  Note, setting this to true also requires
# the Microsoft R2 or SFU Unix password synchronization service to be
# installed on ALL domain controllers in the domain
#
# nss.passwd.hash: false
#

# Ignore users with uid 0, gid 0, the name root, and the groups wheel and root
# from Active Directory.  Forces these users and groups to be defined locally.
# Prevents a user who has write access to the zone from gaining root access
# on the machine.  The default is true, but group policy should be disabled
# to make this feature completely secure.  You must run adflush to flush the
# cache after changing this value.
#
# nss.squash.root: true

#
# Allow these users to authenticate locally.
# If something goes wrong with either the network, AD, or adclient, no AD
# users will be able to get in. Users listed here - provided they are also
# mapped users - will still have local access.
# To log in locally, append "@localhost" to your user name when logging in
# (example "root@localhost"). Otherwise, your AD password will be required.
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Login Settings"
#               -> "Allow localhost users"

pam.allow.override: root

#
# Allow a specific user to be mapped to another user.  The variables $HOSTNAME
# and $ZONE contain the machine's current hostname and zone name, and are
# useful for mapping root and other system users to more restricted AD users.
# Note, the target user name must be a Windows (SAMAccount) name, not a zone
# name:
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Set user mapping"
#
# pam.mapuser.unix_user: windows_target
# pam.mapuser.jdoe: Jane Doe
# pam.mapuser.juser: juser_$HOSTNAME
#
# Zone root mapping may be configured by the Windows DirectControl
# Management Console install wizard. To enable, uncomment the following line
#
#pam.mapuser.root: root_$ZONE

# Authenticate using the users cached credentials first regardless of the Active Directory 
# connectivity state.  This can be used to reduce network traffic on slow networks, 
# but may have undesired side effects if authenticated via cache while online.
#
# This value is controlled by group policy under
#   CentrifyDC Settings->Prefer Authentication against cached credentials
#
# adclient.prefer.cache.validation: false

#
# Ignore a specific list of users from CentrifyDC pam authentication,
# allow these users to authenticate locally.
#
#
# You may also specify a file name with a list of users in the file
# pam.ignore.users: jcool jdoe
#
# pam.ignore.users: file:/etc/centrifydc/user.ignore
#
pam.ignore.users: file:/etc/centrifydc/user.ignore

# Allow a specific list of users and/or groups to log into this computer.
# Only these users or users in the groups are allowed.  If this value is set,
# the "deny" flag is ignored. If these values are empty, and the deny values
# are empty, all zone users are allowed to login
#
# These values are controlled via group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Login Settings"
#               -> "Manage login filters"
#
# You may also specify a file name with a list of users in the file
# pam.allow.users: file:/etc/centrifydc/users.allow
# pam.allow.groups: file:/etc/centrifydc/groups.allow
## pam.allow.users: jdoe krusty
## pam.allow.groups: smokeallow
# pam.deny.users: jcool
# pam.deny.groups: file:/etc/centrifydc/groups.deny
# pam.deny.groups: clowns
pam.allow.users: file:/etc/centrifydc/users.allow
pam.allow.groups: file:/etc/centrifydc/groups.allow

#
# If a zoned user is denied access via pam.deny.* or by not being listed in
# pam.allow.* their shell is set the value of nss.shell.nologin, typically
# /bin/nologin or /bin/false.   This adds an extra level of security, insuring
# the zone disabled user cannot obtain shell access, even if authenticated
# through Kerberos, SSH-Keys, or some other non-pam related method.
# Since the group lookup resolution was time consuming in previous releases,
# this step can be disabled, potentially opening a security issue.  Note the
# performance issue with pam.allow/deny group lookup was addressed in
# DirectControl 4.2. Setting this value to false is not recommended.
#
# The default value is true, which forces the substitution.
#
# pam.deny.change.shell: true
#


# Should adclient edit system config files for you at startup.   The default
# is to change all required files.
#
# adclient.autoedit: true
#
# Individual files can be specifically controlled by following options,
# depending upon the OS platform.  These are ignored if the above value is set
# to false.
#
# Disable HPUX pwgrd.  Setting this to false may improve system
# performance, but some minor DirectControl features may not work.
# Please see the release notes for more information.
# adclient.autoedit.pwgrd: false
#
# Disable nscd password and group caching.   Setting this to false may improve
# system  performance, but some minor DirectControl features may not work.
# Please see the release notes for more information.
# adclient.autoedit.nscd: false
#
# AIX LAM configuration, automatically add centrifydc user method
# adclient.autoedit.methods: true
# adclient.autoedit.user: true
#
# Add centrifydc entries to the nsswitch.conf file
# (HPUX, Solaris and Linux)
# adclient.autoedit.nss: true
#
# Add centrifydc entries to the pam.conf or pam.d directory
# (HPUX, Solaris and Linux)
# adclient.autoedit.pam: true
#
# OS/X Directory Services Config
# adclient.autoedit.dsconfig: true


# Named socket through which clients communicate with adclient.
adclient.clients.socket: /var/centrifydc/daemon

# How long before dropping a socket connection to an inactive client,
# in seconds. Zero means "never" -- inadvisable.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set idle client timeout"
#
# adclient.client.idle.timeout: 900
#

# Number of pre-allocated threads for processing client requests.
# If 0, client requests are processed one at a time.
# Changing this property requires a restart of adclient
#
# Controlled by Group Policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Set minimum number of threads"
#
# adclient.clients.threads: 4
#

# Maximum number of threads the agent will allocate for processing client
# requests.  Should be greater than or equal to the number of pre-allocated
# threads.  The default value is 20
# Changing this property requires a restart of adclient
#
# Controlled by Group Policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Set maximum number of threads"
#
# adclient.clients.threads.max: 20
#



# Whether to use all processors on a multi-processor system.  Change this
# value to false if you encounter stability problems on multi-processor
# systems. Changing this property requires a restart of adclient
#
# adclient.use.all.cpus: true
#

# Number of backlog connections to maintain when all threads are busy.
# Changing this property requires a restart of adclient
#
# adclient.clients.listen.backlog: 50
#

# The global catalog cache only keeps Distinguished names.  We don't track
# the USNs
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set GC expiration"
#
# adclient.cache.expires.gc: 3600
#

# Amount of time, in seconds until a generic object's USN is checked for
# changes. Cache times are reset if there has not been any change to the USN
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set object expiration"
#
# adclient.cache.expires: 3600
#

# Object specific cache timeouts.  If not specified for a specific object
# class, the general cache expiration value is used
#
# Controlled by group policy under the settings
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set user object expiration"
#               -> "Set group object expiration"
#
# adclient.cache.expires.user: 3600
# adclient.cache.expires.group: 3600
#
# Amount of time, in seconds, that must pass before an object will be refreshed
# from AD, even if cache is supposed to be bypassed.
#
# Controlled by group policy under the setting
#   CentrifyDC Settings->Timeout Settings->Object Refresh Expiration Time
#
# adclient.cache.refresh: 5
#

# Object specific cache refresh timeouts.  If not specified for a specific object
# class, the general cache refresh value is used
#
# Controlled by group policy under the settings
#   CentrifyDC Settings->Timeout Settings->User Object Refresh Expiration Time &
#   CentrifyDC Settings->Timeout Settings->Group Object Refresh Expiration Time
#
# adclient.cache.refresh.user: 5
# adclient.cache.refresh.group: 5
#

# If true encrypt all AD Cached data
# If you enable this feature the cache will be flushed each time ADClient
# starts up.
# This parameter can be controlled from the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Encrypt Adclient cache data"
#
# adclient.cache.encrypt: false
#

# Specify the (legal) kerberos encryption type
# This key only meaningful if adclient.cache.encrypt is true
# This parameter can be controlled from the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Use the legal Kerberos type for cache encryption"
#
# adclient.cache.encryption.type: arcfour-hmac-md5
#

# How many minutes will a negative object live in the cache, regardless of
# expiration time?  Default is 5 minutes.  0 means forever.
# This parameter can be controlled from the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set cache negative life time"
#
# adclient.cache.negative.lifetime: 5
#

# How often should adclient flush it's entire cache.  0 means never.
#
# adclient.cache.flush.interval: 0
#

# How many hours will a regular object live in the cache, regardless of
# expiration time?  Default is forever.
#
# adclient.cache.object.lifetime: 0
#

# How often should the daemon clean up the cache, looking for old objects,
# negatives and potential complete cache flush.  This parameter should be
# less than or equal to the three above: adclient.cache.negative.lifetime,
# adclient.cache.flush.interval, and adclient.cache.object.lifetime
# Default is every 10 minutes
#
# This parameter can be controlled from the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Set cache cleanup interval"
#
# adclient.cache.cleanup.interval: 10
#

# Amount of time, in seconds, which adclient will wait for a response from
# ActiveDirectory before it gives up.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set LDAP response timeout"
#
# Note ldap requests are retried twice before the agent decides we are
# disconnected.  On the second request, this value is doubled.
#
# adclient.ldap.timeout: 7
#

# Amount of time, in seconds, which adclient will wait for a search response
# from ActiveDirectory before it gives up.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set LDAP search timeout"
#
# Note ldap requests are retried twice before the agent decides we are
# disconnected.  On the second request, this value is doubled.
# By default, this value is double the above request timeout
#
# adclient.ldap.timeout.search: 14
#

# Amount of time, in seconds, which adclient will wait for a
# socket connection timeout during ldap binding
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set LDAP connection timeout"
#
# adclient.ldap.socket.timeout: 5
#

# Maximum number of servers to try to connect to when the default domain
# controller is down before deciding to run in disconnected mode.  Note this
# value will be doubled in the case where this computer's network is not
# defined in a site.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set maximum server connection attempts"
#
# adclient.server.try.max: 3
#

# Amount of time, in seconds, which adclient will wait for data coming
# a client request.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set LRPC2 receive timeout"
#
# adclient.lrpc2.receive.timeout: 30
#

# Amount of time, in seconds, which adclient will wait for reply
# data to be sent in response to a client request.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set LRPC2 send timeout"
#
# adclient.lrpc2.send.timeout: 30
#

# LDAP traffic encryption option.
# possible values: Allowed, Disabled, Required
#
# adclient.ldap.packet.encrypt: Allowed
#

# Maximum number of items in each page of a paged LDAP search.
# Lower numbers increase traffic to AD and decrease the adclient RAM usage,
# while higher numbers decrease traffic to AD and increase the adclient RAM
# usage.
#
# adclient.paged.search.max: 100
#


# When the Kerberos PAC information is not available, the agent may
# attempt to use the Active Directory tokenGroups attribute on the user
# object to determine the user group membership.  In the case of Windows
# 2000/2003 mixed-mode domains, the tokenGroups attribute may include universal
# groups which would not normally be included in the Windows 2000 Kerberos PAC.
# This should be harmless, since Universal groups are typically not used
# in mixed mode domains for this reason.  In the unusual case that the
# inconsistent inclusion of universal groups in the user's group membership
# list is causing problems, set the following value to false.  Setting this
# value to false will force the agent to use a slower mechanism for finding
# group membership which may result in slower user login, but the results
# will be consistent with the PAC.
#
# adclient.use.tokengroups: true
#


#
# By default, adclient process group membership from Active Directory.  If
# users are members of a large number of Active Directory groups (> 500), you
# may experience a delay when the user logs in, due to the number of groups
# which need to be retrieved from Active Directory.   This is typically only a
# problem when running in "Workstation" mode.  When joining a zone, the group
# selection is limited to zone enabled groups.
#
# Note enabling this feature in Auto Zone will disable the
# "Mac Administrator" Group Policy.  A work-around is available for this
# problem on the Centrify Support Portal.
#
# adclient.get.group.membership: true
#

#
# Maintain compatibility with DirectControl 2.X zones.  The default is true
# the zone was created with 2.0 or 3.0 console.  The default is false for
# zones created with the 4.x console.
# If you have users or groups that were created with DirectControl 2.X this
# value should be true.  This will decrease login performance on Windows 2000
# domain controllers.  To upgrade zones and user please see Analyze Forest
# documentation.
#
# adclient.version2.compatible: false
#

# the password prompts are controlled via group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Password Prompts"
#               -> "Set login password prompt"
#               -> "Set notification text for password change"
#               -> "Set password prompt for old password change"
#               -> "Set password prompt for new password change"
#               -> "Set password prompt for confirming new password change"
#
# pam.password.enter.mesg: Password:\
# pam.password.change.mesg: Changing password for\
# pam.password.old.mesg: (current) password:\
# pam.password.new.mesg: Enter new password:\
# pam.password.confirm.mesg: Confirm new password:\
#

#
# This configuration parameter specifies how many days before a warning
# is issued for password expiry.
#
# The parameter value must be 0 or a positive integer.  If this parameter
# is not present, its default value is 14 days.
#
# this setting is controlled via group policy under the setting
#      "Computer Configuration"
#      -> "Windows Settings"
#         -> "Security Settings"
#            -> "Local Policies"
#               -> "Security Options"
#                   -> "Interactive Logon: Prompt user to change password before expiration"
#
# pam.password.expiry.warn: 14
#

# What to do if, when a user is logging in, PAM discovers that the user's AD
# record has the same UID or the same user name (but not both) as a local
# system account. Choices:
#   ignore = Don't check, do nothing.
#   warn   = Warn user of conflict after logging (default).
#   error  = Disallow user from logging in.
#
# this setting is controlled via group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Pam Settings"
#               -> "Set UID conflict resolution"
#
# pam.uid.conflict: warn
#

# Message displayed when a user name conflict is detected during login (see
# pam.uid.conflict). In this case, the UIDs match and the names do not.
#
# When the message is displayed, the '%s' token is replaced with the
# name of the conflicting local account. The message must contain exactly
# one '%s' token, and no other '%' characters.
#
# pam.account.conflict.name.mesg: Account with conflicting name (%s) exists locally
#

# Message displayed when a user ID conflict is detected during login (see
# pam.uid.conflict). In this case, the user names match and the UIDs do not.
#
# When the message is displayed, the '%d' token is replaced with the
# ID of the conflicting local account. The message must contain exactly
# one '%d' token, and no other '%' characters.
#
# pam.account.conflict.uid.mesg: Account with conflicting UID (%d) exists locally
#

# Message displayed when user name and user ID conflicts are detected during
# login (see pam.uid.conflict). In this case, two local accounts were found:
# one where the user's UIDs match and names do not, and another where the names
# match and the UIDs do not.
#
# When the message is displayed, the '%s' token is replaced with the name of
# the first conflicting local account, and the '%d' token is replaced with
# the UID of the second conflicting local account. The message must contain
# exactly one '%s' token and exactly one '%d' token, in that order, and no
# other '%' characters.
#
# pam.account.conflict.both.mesg: Accounts with conflicting name (%s) and UID (%d) exist locally
#


# Customers with a centralized password management facility (encompassing
# Active Directory) may set these values to:
#  pam.allow.password.expired.access:
#    true:  Allow access to users with expired passwords.
#    false: Deny access to users with expired passwords.
#  pam.allow.password.change:
#    true:  Allows users to change their passwords.
#    false: Disallow users from changing their passwords.
# Generally, both should have the same value.
# Setting them to different values:
#   Permit users with expired passwords to log in but do not prompt for
#   password change:
#     pam.allow.password.expired.access: true
#     pam.allow.password.change:         false
#   Allow users to change their passwords but not allow login when password
#   has expired:
#     pam.allow.password.expired.access: false
#     pam.allow.password.change:         true
# Accompanying message strings:
#   pam.allow.password.expired.access.mesg:
#     Message displayed when access is denied because password has expired and
#     pam.allow.password.expired.access is false.
#   pam.allow.password.change.msg:
#     Message displayed when password change is not permitted because
#     pam.allow.password.change is false.
#
# pam.allow.password.expired.access: true
# pam.allow.password.change: true
# pam.allow.password.expired.access.mesg: Password expired - access denied
# pam.allow.password.change.mesg: Password change not permitted
#

#
# Message to be displayed if the user account is locked because of failed
# login attempts.  The defaults are generic for improved security
#
# pam.account.locked.mesg: Account cannot be accessed at this time.\nPlease contact your system administrator.
#


# Message displayed when the account password will expire in
# pam.password.expiry.warn days or less.
#
# When the message is displayed, the '%d' token is replaced with the
# number of days until expiration. The message must contain exactly
# one '%d' token, and no other '%' characters.
#
# pam.password.expiry.warn.mesg: Password will expire in %d days
#

# Message displayed during login when access is denied because a user's
# account has expired.
#
# pam.account.expired.mesg: Account cannot be accessed at this time.\nPlease contact your system administrator.
#

# Message displayed during login when access is denied because a user's
# account has disabled.
#
# pam.account.disabled.mesg: Account cannot be accessed at this time.\nPlease contact your system administrator.
#

# Message displayed during login when access is denied because of a
# workstation restriction.
#
# pam.workstation.denied.mesg: Account cannot be accessed at this time.\nPlease contact your system administrator.
#

# Message displayed during password change when the old password is incorrect.
#
# pam.auth.failure.mesg: Password authentication failure
#

# Message displayed during password change when the two new passwords do not
# match each other.
#
# pam.password.new.mismatch.mesg: New passwords don't match
#

# Message displayed when an empty password is entered.
# Empty passwords are not permitted.
#
# pam.password.empty.mesg: Empty password not allowed
#

# Message displayed during password change when the operation fails because
# of a domain password policy violation (not enough characters, not complex
# enough, etc).
#
# pam.policy.violation.mesg: The password change operation failed due to a policy restriction set by the\nActive Directory administrator. This may be due to the new password length,\nlack of complexity or a minimum age for the current password.
#

# Message displayed when a user's home directory is created.
#
# pam.homedir.create.mesg: Created home directory
#

# Message displayed during password change when Centrify's adclient daemon is
# inaccessible.
#
# pam.adclient.down.mesg: (Unable to reach Active Directory - using local account)
#


# Message displayed by adpasswd when a user cannot change their password
# because it has been disallowed.
#
# adpasswd.password.change.disabled.mesg: Password change for this user has been disabled in Active Directory
#

# Message displayed by adpasswd when a user cannot change another user's
# password because of insufficient permissions.
#
# adpasswd.password.change.perm.mesg: You do not have permission to change this users password.\nPlease contact your system administrator.
#

# Message displayed by adpasswd when a user cannot change their password
# because the account is locked.
#
# adpasswd.account.disabled.mesg: Account cannot be accessed at this time.\nPlease contact your system administrator.
#

# Message displayed by adpasswd when a user is unrecognized or the password
# is invalid.
#
# adpasswd.account.invalid.mesg: Invalid username or password
#


# Allow Kerberos Authentication in PAM. Create .k5login file in ${HOME}.
#   true = create .k5login in home directory.
#   false = do nothing.
# this seeting is controlled via group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Pam Settings"
#               -> "Create k5login"
#
# pam.create.k5login: true
#

# if user's home directory does not exist in local machine, PAM creates it.
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Pam Settings"
#               -> "Create home directory"
#
# pam.homedir.create: true
#

# If user's home directory does not exist in local machine, PAM creates it
# with this permissions.
#
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Pam Settings"
#               -> "Set home directory permissions"
# Note the permission value must be in Octal. That is,  0XXX or 0YYY
#
# pam.homedir.perms: 0700
#

# Specify the list of domains PAM authentications use NTLM authentication
# methods rather than Kerberos. This helps with users that are behind a
# firewall where the Kerberos ports are blocked, but a trust relationship
# exists between domains inside and outside the firewalls.  The domain names
# must be AD domain names (not NTLM names).
#
# pam.ntlm.auth.domains: <domain1> <domain2> ...
# pam.ntlm.auth.domains: bar.com foo.bar.com foo2.bar.com
#
# The default is an empty list
#

#
# You can specify a list of AD to NTLM domain mappings with this parameter. Useful in cases
# where NTLM authentication is used because firewalls prevent Kerberos authentication, and
# prevent the automatic discovery of AD to NTLM domain mappings.
# Use this option to specify a file of colon separated values of the form ADDomain:NtlmDoamin
# adclient.ntlm.domains: file:/etc/centrifydc/domains.conf
#
# Use this form to directly specify the values
# adclient.ntlm.domains: ACME.COM:ACME

#
# You can specify what characters will be allowed for NTLM name forms to
# separate the domain portion from the name.
# For instance setting this value to "\\/+" allows any of the following forms
# to be syntactically correct: DOMAIN\user DOMAIN/user DOMAIN+user.
# Note that the back slash can be problemmatic for Unix shells and sometimes you
# may need to specify it as "DOMAIN\\user"
#
# In addition the 'first' character in the list will be used when adclient
# internally generates NTLM names.
#
# Replaces the deprecated auto.schema.separator keyword.
#
# Default is "+/\\"
# adclient.ntlm.separators: +/\\




# Default group for adupdate user add
#
# adupdate.useradd.group.default: 10000
#

# Additional service principals for key table entry
# Default is "http ftp cifs nfs afpserver ipp" on Mac OS X and
# "http ftp cifs nfs" on other platforms.
#
# adclient.krb5.service.principals: http ftp cifs nfs
#

# Encryption types supported for getting tickets.
#
# Default set:
# adclient.krb5.tkt.encryption.types: aes256-cts aes128-cts arcfour-hmac-md5 des-cbc-md5 des-cbc-crc
#

# Force password salt lookup from the KDC.  This is only required if you remove
# arcfour-hmac-md5 from the list above and you change a user-principal-name in
# Active Directory without changing the user's password.  Changing this value
# to true may cause "pre-auth required" messages to appear in the Active
# Directory event log
# This value is controlled by group policy under
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Force Salt Force Lookup Password from KDC"
#
# adclient.force.salt.lookup: true
#

# Encryption types permitted in client credentials.  These names are defined
# by Kerberos
#
# Default types
# adclient.krb5.permitted.encryption.types: aes256-cts aes128-cts arcfour-hmac-md5 des-cbc-md5 des-cbc-crc
#

# Number of keytable entries to be kept for a principal
#
# adclient.krb5.keytab.entries: 3
#

# Whether adclient should update the krb5.conf file or not
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Kerberos Settings"
#               -> "Manage Kerberos Configuration"
#
# adclient.krb5.autoedit: true
#

# how often the Krb5config file should be updated (in hours)
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Kerberos Settings"
#               -> "Set configuration update interval"
#
# krb5.config.update: 8
#


# interval in days for changing the machine trust account password
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Kerberos Settings"
#               -> "Set password change interval"
#
# adclient.krb5.password.change.interval: 28
#


# custom krb5 options for use when joining
#
# adjoin.krb5.conf.file: /etc/centrifydc/krb5_join.conf
#

# Controls whether Kerberos will check the source address on private messages
# to confirm if the response came back from the same KDC the request was sent
# to.  This defaults to false, so that Centrify can work seamlessly when AD
# is behind a NAT or if the closest domain controller is read-only.
#
# adclient.krb5.passwd_check_s_address: false
#

# Password hash storage.  By default, a Unix style MD5 hash of the user's
# password is stored in the cache when the user authenticates via login.
# This allows for disconnected logins.  The following values allow you
# to control which users will or will not have their password hash stored
#
# These settings are controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Set password cache"
#
# To only allow specified users from having their hash stored,
# use the allow property.  The default is empty which allow all users.
# Users must be specified by samAccountName@domain.name
#    adclient.hash.allow: jdoe@centrify.com bsmith@eng.centrify.com
#
# To prevent specified users from having their hash stored,
# use the deny property, all other users are allowed.  The default is empty
# which allows all users
# (overrides adclient.hash.allow)
#    adclient.hash.deny: jdoe@centrify.com bsmith@eng.centrify.com
#
# The amount of time before the hash will expire in days. 0 means never expires
# The default is 0
#
# adclient.hash.expires: 0
#

# Prevalidated users.  Disconnected authentication based on saved
# password hashes can only be used for users that have previously
# logged into the system.  If you have users that have never
# logged into the system, but still require that they be
# authenticated when the system is disconnected, you can select
# users for prevalidation.  This service is typically used for a
# group of administrators that need access to the disconnected
# system even if they have never logged in.
#
# These settings are controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Account Prevalidation"
#
# In order for a user to be prevalidated, the user must have a
# Service Principal Name (SPN) set in the form of:
#   preval/user
# Where 'user' is the User Logon Name, which can be  either
#  1. name part in the user's UPN, if the domain part matches the user's domain.
#  2. samAccountName, if UPN is empty or UPN's domain part is different from user's domain;
# and 'preval' is the service name specified by the
# adclient.prevalidate.service parameter below.
#
# By default, no users are prevalidated.
# If you specify either
#   adclient.prevalidate.allow.users or
#   adclient.prevalidate.allow.groups parameters,
# only those users will be prevalidated, with the exception of
# users specified in
#   adclient.prevalidate.deny.users and
#   adclient.prevalidate.deny.groups
# If you wish to include all users in the zone without any
# exceptions, set adclient.prevalidate.allow.groups to the string 'all@zone'.
#
# CAVEAT: The deny users/groups settings are useless without settings in allow
#         user/groups. In other words, a settings for deny only makes sense if there
#         is a setting for allow.
#
# For example, the attributes could be used as follows:
#   adclient.prevalidate.allow.users: jdoe
#   adclient.prevalidate.allow.groups: admins
#   adclient.prevalidate.deny.users: bsmith
#   adclient.prevalidate.deny.groups: contractors
#

# The credentials for prevalidated users are refreshed when the
# system boots, when adclient is started, after an 'adflush',
# after a user changes their password, and periodically to ensure
# that prevalidation will continue working after password changes.
# A value of 0 disables all prevalidation of users.
# How often we refresh periodically (in hours)
#
# adclient.prevalidate.interval: 8
#

# The service name to use for prevalidated users (see comments above).
#
# adclient.prevalidate.service: preval
#

# Should user credentials be automatically reissued when they expired?  This
# requires a hash of the user's password to be kept in memory and will not work
# if adclient is restarted.
#
# krb5.cache.infinite.renewal: false
#

# How often we renew Kerberos credentials for users (in hours)
# 0 indicates no renewal
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Kerberos Settings"
#               -> "Set credential renew interval"
#
# krb5.cache.renew.interval: 8
#

# Turn on Kerberos credentials cache deletion for logged out users
# Kerberos credentials caches that are owned by users who are
# not logged in will be periodically deleted.  Note that this
# includes users who gained credentials via su - as such users are
# not technically logged in, their cache will be removed.
# Additionally CDC users will have their caches removed at log out.
# modes:
# off : turn off credentials cache deletion
# cdc : delete only credentials caches that were created by DirectControl
# all : delete credentials caches that were created by any program
#       (also removes credentials caches where the user cannot be resolved)
# The default mode is cdc
#
# krb5.cache.clean: cdc
#

# How often we delete current credentials caches for
# logged out users (in minutes).
# Zero turns off periodic cache cleaning
# The default value is 30
#
# krb5.cache.clean.interval: 30
#

# Should we create forwardable tickets for the users
# true indicates yes, false indicates no
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Kerberos Settings"
#               -> "Generate the forwardable tickets"
#
# krb5.forwardable.user.tickets: true
#

# Whether to permit lookup of service principals using DNS.
# Setting this value to 'true' is not recommended because it makes
# the system less secure.
#
# krb5.permit.dns.spn.lookups: false
#

# Windows 2000 does not support the Kerberos Version Number, used to allow
# tickets issued using the computer's previous key to still be decrypted in
# the situation where the ticket was issued before the computer changed it's
# password, but presented afterwords.   This feature requires Centrify's
# Kerberos libraries.  Older kerberos applications may fail to understand
# the generated kvnos.  Change this to false to support older apps, with the
# knowledge that the race condition above may cause authentication failures.
#
# krb5.generate.kvno: true
#

#
# If set to true, force all Kerberos requests to use TCP rather than UDP with
# TCP fail-overs.  Important for cases where intervening routers are configured
# to silently discard large UDP packets, or are configured to send ICMP
# fragmentation required responses, leading to Kerberos fragmenting UDP packets
# opening the door to possible intermittent failures due to packet re-ordering.
# The default setting for this parameter is true.
#
# krb5.forcetcp:true

#
# This value sets the maximum size packet that the Kerberos libraries will
# attempt to send over a UDP connection first before retrying with TCP
# if necessary. If the packet size is larger than this value only TCP will be
# tried. If set to 1, TCP will always be used.  The hard UDP limit is 32700.
# Values larger than this are ignored and the UDP hard limit is enforced.
#
# This key only takes effect if "krb5.forcetcp" is set to false.
# If "krb5.forcetcp" is true, and DirectControl is managing the krb5.conf file,
# it will set udp_preference_limit to 1, so that the Kerberos libraries will always
# use TCP.
#
# krb5.udp.preference.limit: 1465

#
# If set to true, enables Kerberos to automatically correct for
# a time difference between the system clock and the clock used by the KDC.
# This is only necessary if your system clock is drifting, and
# NTP and adclient SNTP settings are not used on the system.
#
# krb5.use.kdc.timesync: false

#
# By default, a user's TGT will be verified by retrieving and verifying a
# service ticket for the local system. This check is done in order to
# prevent a well-known attack (Zanarotti aka screen-saver attack) whereby
# a rogue KDC could respond to our request to get the user's TGT.
# If set to false, the spoofing check will be disabled and will significantly
# improve the authentication performance.
#
# krb5.verify.credentials: true



#
# By default, if Kerberos altSecurityIdentities exist for a user, we use it
# for authentication instead of the Windows name, regardless as to which of
# the two names was supplied.  This works as long as 1) The alternate name
# is always used or the passwords are synchronized and 2) The third-party KDC
# is reachable. If these conditions are not met, and Kerberos
# altSecurityIdentities exist, you can disable this feature, by setting this
# keyword to false. Then only the Windows name can be used to authenticate
# the user, and any Kerberos altSecurityIdentities are ignored.
#
# krb5.support.alt.identities: true

#
# How often we attempt to re-establish ldap bindings to the
# preferred site after being forced to temporarily use
# non-preferred site ldap services (in minutes)
# 0 indicates no attempts
#
# adclient.binding.refresh.interval: 30
#

# The maximum idle time of binding (in minutes)
#
# adclient.binding.idle.time: 5
#

#
# Group Policy can be disabled by setting the following value to true
# If the disable all flag is set, the user and machine gp settings below
# will be ignored.  Note that User GP is disabled by default except on
# Macintosh-OS/X
#
# gp.disable.all: false
# gp.disable.machine: false
# gp.disable.user: true (false for OS/X)
#

#
# This setting is to control how often user GP is being updated and
# executed at login time. The default value of once improves the
# performance of creating multiple login shells on the same machine.
# Other valid values are always and never. This does not affect
# periodic GP updates nor running `adgpupdate' directly.
#
# gp.user.login.run: once
#

#
# The amount of time to wait for a single Group Policy mapper to complete
# in seconds.  The default is 30 seconds and should be less than the value
# gp.mappers.timeout.all.
#
# controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Group Policy Settings"
#               -> "Set group policy mapper execution timeout"
#
# gp.mappers.timeout: 30
#

#
# The amount of time to wait for the Group Policy mappers to complete
# in seconds.  The default is 4 minutes (240).  This value should be
# less than the value of lrpc.timeout
#
# gp.mappers.timeout.all: 240
#

#
# The default umask for mappers creating files
#   u=rwx, g=rx, o=rx
#
# gp.mappers.umask:0022
#

# Group Policy mapper configuration for machine policies.  The
# gp.mappers.directory.machine property specifies the directory
# that contains mapper programs for machine group policies. The
# gp.mappers.machine property specifies the list of mappers to
# run.  A * means to run all the mappers that appear in the
# directory and are not listed explicitly, in ASCII sorted order.
#
# If one program must be run first and another last, use:
#
# gp.mappers.machine: first_mapper * last_mapper
#
# To prevent a mapper from running, either use chmod(1) to remove
# its execute permission, or set:
#
# gp.mappers.machine: !disabled_mapper *
#
# These settings controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Group Policy Settings"
#               -> "Set machine group policy mapper list"
#
# gp.mappers.directory.machine: /usr/share/centrifydc/mappers/machine
# gp.mappers.machine: *

#
# Group Policy mapper configuration for user policies.  The
# syntax is the same as for machine policy mappers.
#
# These settings controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Group Policy Settings"
#               -> "Set user group policy mapper list"
#   CentrifyDC Settings->Group Policy Settings
#
# gp.mappers.directory.user: /usr/share/centrifydc/mappers/user
# gp.mappers.user: *

# The program that runs the mappers as configured above.
# gp.mappers.runmappers: /usr/share/centrifydc/mappers/runmappers

# File where the gp error data will be written.
# gp.mappers.error_file: /var/log/centrify_mapper_error.log

# Directory where the registry for machine data will be written.
#
# gp.reg.directory.machine: /var/centrifydc/reg/machine
#

# Directory where the registry for user data will be written.
#
# gp.reg.directory.user: /var/centrifydc/reg/users
#

# Disable background processing of group policies.
# This applies to machine and user policies
#       "Computer Configuration"
#         -> "Administrative Templates"
#            -> "System"
#               -> "Group Policy"
#                 -> "Turn off background refresh of Group Policy"
#
# gp.refresh.disable: false
#




# lrpc: max time in seconds to wait for a adclient response.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set LRPC response timeout"
#
# lrpc.timeout: 300
#

# Amount of time, in seconds, which adclient will wait for a
# socket connection timeout during lrpc
#
# lrpc.connect.timeout: 5
#

# Amount of time, in seconds, which a client will keep the adclient
# connection open for context dependent requests (pwgetent, etc..)
# Lower this value reduces the chance of a multithreaded program
# being affected by an adclient restart at the risk of slow context
# dependent apps failing.  Increasing the value reduces
# the overhead of re-establishing a connection for multiple requests
#
# lrpc.session.timeout: 30
#

# optimal number of objects to obtain in a single ldap request
# There's a trade off here between speed and memory usage as well as
# bandwidth vs latency. Larger numbers may improve performance and
# increase memory usage.  Smaller numbers will use less memory.  This
# is mostly used for retrieving large groups (>1000 users).
# On fast networks, smaller numbers seem to be best
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Set LDAP fetch count"
#
# adclient.fetch.object.count: 100
#

# SNTP settings
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Administrative Templates"
#         -> "System"
#            -> "Windows Time Service"
#               -> "Enable SNTP client"
#
# If true, adclient will keep the system clock in sync with the domain.
# adclient.sntp.enabled: true
#

# The interval between sntp clock updates.  The value is the base 2
# logarithm of the time in seconds.  For example, a value of 6 gives
# 64 seconds (2**6), and a value of 15 gives 32768 seconds, or 9.1 hours.
#
# Controlled by group policy under the setting
#      "Computer Configuration"
#      -> "Administrative Templates"
#         -> "System"
#            -> "Windows Time Service"
#               -> "SNTP Poll Interval"
#
# adclient.sntp.poll: 15
#

#
# Specify dc and gc hostnames if your DNS isn't configured correctly
# for AD.  This is not recommended for production systems, since AD
# automatically updates DNS with failover and replica systems and optimizes
# for your site location.  This is provided mostly for evaluation systems
# which are using Unix DNS and can't add the _ldap and _gc service records
#
# dns.dc.<domain.name>: <hostname> [hostname] ...
# dns.gc.<domain.name>: <hostname> [hostname] ...
#
# Example:
# dns.dc.acme.com: anvil.acme.com cayote.acme.com
# dns.gc.acme.com: roadrunner.acme.com
#
# Note the hostname must resolve in DNS or be entered in /etc/hosts
#

#
# Comma separated list used when scanning for live DNS servers.
# A 't' means scan with TCP.  A 'u' means scan with UDP.
# The number that follows is the seconds to wait for a response.
# For each value, all known DNS servers are queried.
# Once one or more DNS servers respond, the fastest is chosen
# and the sweep stops.
# If the end of list is reached and no DNS servers responded,
# DNS is considered down.
#
# dns.sweep.pattern: t1,u1,u1,t2,u2,u2
#

#
# Amount of time to wait if DNS is down before triggering a DNS server sweep.
#
# dns.dead.resweep.interval: 60
#

#
# Amount of time to wait if DNS is active before triggering a DNS server sweep
# to see if any DNS servers are responding faster than our current one.
#
# dns.alive.resweep.interval: 3600
#

#
# Number of times to send a UDP request and waiting for a response.
# For TCP the request is only tried once.
#
# dns.udp.retries: 3
#

#
# Amount of time to wait for a response before retrying or giving up.
# dns.timeout: 1
#

#
# List of domain controllers that will be blocked (filtered out) when resolving
# through DNS. Useful when certain Domain Controllers are known to be
# inaccessible (e.g. behind a firewall, etc.) and shouldn't be contacted.
#
# Adding a DC to the dns.block list that adclient is already connected to will
# not break the current connection.  However dns.block DCs have precedence over
# domain controllers listed in kset files, i.e. DCs in the kset files will be
# ignored for selection if the DCs are also listed in the dns.block list.
#
# This parameter is controlled by Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Blacklist DNS DC hostnames"
#
# dns.block: fqdn, fqdn, ...

#
# The amount of time in seconds until a cached DNS response expires
#
# Note that dns.cache.timeout replaces the deprecated adclient.dns.cache.timeout keyword.
#
# dns.cache.timeout: 300
#

#
# When scanning for live domain controllers.
# What is the sequence of timeouts in seconds that should be used for a fast sweep.
# Fast sweep is used when an answer is more important than deep discovery.
#
# dc.fast.sweep.pattern: 0.1, 0.5, 1.0, 2.0
#

#
# When scanning for live domain controllers.
# What is the sequence of timeouts in seconds that should be used for a deep sweep.
#
# dc.deep.sweep.pattern: 1.0, 2.0, 5.0, 10.0
#

#
# How long to keep the cached the fact that a DC is dead.
#
# dc.dead.cache.refresh: 60
#

#
# How long to keep the cached the fact that a DC is alive.
#
# dc.live.cache.refresh: 3600
#

#
# Controls whether or not DC's will be sorted by speed for selection purposes.
# Setting this to true will result in the fastest responding DC being used at
# the time of selection.  However this may result in many adclient's selecting
# the same DC. Setting this to false means the first responding DC in the order
# given by a DNS SRV locator record lookup will be used.
#
# dc.speed.sort: false
#

#
# How long to keep the cached the fact that a domain is dead (no live DCs).
#
# domain.dead.cache.refresh: 60
#

#
# How long to keep the cached the fact that a DC is alive.
#
# domain.live.cache.refresh: 3600
#

# The maximum timeout of UDP binding.
# Note ldap requests are retried twice before the agent decides we are
# disconnected.  On the second request, this value is doubled.
#This parameter is controlled by Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set UDP timeout"
#
# adclient.udp.timeout: 15
#

#
# Specify whether adclient will be allowed to dump core.  Overrides the
# default ulimit setting.  Valid values are:
#
# never         Never dump core.
# once          Dump core only on the first crash after service startup.
# always        Dump core on every crash.
#
# adclient.dumpcore: once
#

#
# Specify how long (in seconds) adjoin should wait for adclient
# to create its LRPC socket, and how often (in milliseconds)
# to check.
#
# adjoin.adclient.wait.seconds: 60
# adjoin.adclient.poll.ms: 500
#

#
# adjoin uses this value to generate the pre-win2k host name
# by truncating the host name and to determine how it should create its
# computer account in Active Directory.
#
# This value defaults to 15 as that is the maximum host name size allowed by
# the NetLogon service that adclient prefers to use for NTLM pass-through
# authentication.  NetLogon is fast and automatically returns a user's
# group membership.
#
# However this value can be configured for up to 19 characters. In this case
# adclient will use slower NTLM authentication methods, and will use additional
# LDAP searches to fetch the user's group membership.
#
# If the adjoin option -N is used to specify the pre-win2k host name, this
# configuration parameter is not used for that function.
#
# If the computer's host name size exceeds this value, adjoin will use LDAP
# (and require administrative  privileges) to create computer accounts,
# instead of MS-RPC.  Regardless, if the computer's short host name exceeds
# 19 characters, then it is no longer possible to create computer accounts
# via MS-RPC methods and LDAP must be used.
#
# adjoin.samaccountname.length: 15

#
# Set adclient.samba.sync to true, and CentrifyDC will attempt to
# interoperate with Samba if:
#
#    Samba binaries are found under the path specified in samba.base.path.
#    Samba's version matches the version specified in samba.version
#    Samba is configured for ADS security
#    Samba belongs to the same REALM as CentrifyDC
#    Samba and CentrifyDC share an Active Directory Computer object.
#
# Set adclient.samba.sync to false to force CentrifyDC to ignore Samba.
#
# adclient.samba.sync: true
#

#
# The following specifies our supported Samba base path
# These parameters have no effect if adclient.samba.sync is false
#
# samba.base.path: /opt/centrify/samba

#
# There are 2 methods that DirectControl can use to sync a machine's password to Samba, which are:
#    1. Use libtdb APIs to set machine password for Samba.
#    2. Use the "net changesecretpw" CLI to set machine password for Samba.
# By default, DirectControl uses libtdb.so API to set machine password to Samba.
# Set this setting to false if you want DirectControl to use the "net changesecretpw" CLI
# to set the machine password for Samba.
# The property only takes effect when adclient.samba.sync is true.
#
# samba.interop.uselibtdb: true

#
# Normally DirectControl can find the libtdb shared object library on its own.
# If this fails, DirectControl will use this parameter to locate it.
# The property only takes effect when adclient.samba.sync is true.
#
# samba.libtdb.path: /opt/centrify/samba/lib/samba/libtdb.so
#


#
# Allow the DirectControl agent to query trusted domains and forests for
# transitive trust information.  This is used to generate a proper krb5.conf
# file and allow cross forest users to authenticate.  Disable only if your
# trust configuration is out-of-date or does not match your network or
# firewall configuration"
#
# This parameter is controlled by the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Enable LDAP cross-forest search"
#
# adclient.ldap.trust.enabled: true
#

#
# The number of seconds to wait for responses from external forests and
# trusted domains when attempting to determine trust
# relationships.  If you access external forests through slow
# links, this parameter may need to be increased.
#
# This parameter is controlled by the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set LDAP trust timeout"
#
# adclient.ldap.trust.timeout: 5
#



#
# How often should the daemon check for free disk space?
# Default is 5 minutes.  0 means disabled.
# Note that this value also affects the recovery from low disk space mode.
# 0 disables recovery and adclient will not return to normal mode.
#
# adclient.disk.check.interval: 5
#

#
# Specify data directory free space in KB that adclient should generate a
# warning message.  This checking of freespace runs periodically with
# interval specified in adclient.disk.check.interval.
# Default is 51200 KBytes.  0 means "do not generate warning message".
# Note that this value also affects the recovery from low disk space mode.
# Recovery only starts if the freespace is larger than the warning level.
#
# adclient.disk.check.free: 51200
#

#
# Merge local group membership from /etc/group into the Centrify group
# response for groups with the same name and gid.  This violates the NSS
# interface behavior and may have unexpected side effects, so it is
# disabled by default. You must run adreload to detect changes
# in the local group file.
#
# adclient.local.group.merge: false
#

#
# The time difference of the host and domain. If it less than 5min, call the
# adjtime function to update the host time, otherwise call the settimeofday function
# to update host time.
# Default is 5 minutes.
#
# adjust.offset.time: 5
#

#
# The amount of time in minutes adclient will cache access control
# information before refreshing the data from Active Directory.
# Access control information is used to store authorization information
# used by dzdo, dzsh, and pam and potentially third party applications.
# Default is 30 minutes.
#
# This parameter is controlled by the Group Policy
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Network and Cache Settings"
#               -> "Set refresh interval for access control cache"
#
# adclient.azman.refresh.interval: 30

#
# Enable DirectAuthorize capabilities.   The default is true.
#
# dz.enabled: true

#
# If true, dzdo will set the HOME environment variable to the home
# directory of the target user (implies dzdo -H).
# Default is false.
#
# dzdo.always_set_home: false
#

#
# If true, and dzdo is run with the -s option, the HOME environment
# variable will be set to the home directory of the target (-u) user.
# Makes -s imply -H.  Default is false.
#
# dzdo.set_home: false
#

#
# Environment variables to check for % or / characters in the value and
# remove from the user's environment. The variables are removed whether
# or not the Reset environment variables option is selected in the command
# if they are found to have % or / characters.
# The default list of variables to check is displayed when 'dzdo -V' is run
# as root. This list can be replaced using dzdo.env_check as in the
# following example.
#
# dzdo.env_check: COLORTERM,LANG,LANGUAGE,LC_*,LINGUAS,TERM
#

#
# Environment variables to preserve or keep.
# When a command's 'Reset environment variables' is enabled in the UI, the
# user's environment variables will be reset to HOME, SHELL, LOGNAME, USER,
# USERNAME, TERM, PATH, SUDO_COMMAND, SUDO_USER, SUDO_UID, and SUDO_GID.
# Variables specified in the command's 'Keep environment variables' will be
# preserved in addition to a default list of variables which is displayed
# when 'dzdo -V' is run as root.  This default list can be replaced using
# dzdo.env_keep as in the following example.
#
# dzdo.env_keep: COLORS,DISPLAY,HOME,HOSTNAME,KRB5CCNAME,LS_COLORS,MAIL,PATH, PS1,PS2,TZ,XAUTHORITY,XAUTHORIZATION
#

#
# Default environment variables to remove.
# When a command's 'Reset environment variables' in the UI is NOT enabled,
# variables specified a command's 'Remove environment variables' are
# removed in addition to a default list of variables to remove.
# The default list of variables to remove is displayed when 'dzdo -V' is run
# as root. This list can be replaced using dzdo.env_delete as in the
# following example.
#
# dzdo.env_delete: IFS,CDPATH,LOCALDOMAIN,RES_OPTIONS,HOSTALIASES, NLSPATH,PATH_LOCALE,LD_*,_RLD*,TERMINFO,TERMINFO_DIRS, TERMPATH,TERMCAP,ENV,BASH_ENV,PS4,GLOBIGNORE,SHELLOPTS, JAVA_TOOL_OPTIONS,PERLIO_DEBUG,PERLLIB,PERL5LIB, PERL5OPT,PERL5DB,FPATH,NULLCMD,READNULLCMD,ZDOTDIR, TMPPREFIX,PYTHONHOME,PYTHONPATH,PYTHONINSPECT,RUBYLIB, RUBYOPT,KRB5_CONFIG,KRB5_KTNAME,VAR_ACE,USR_ACE,DLC_ACE, SHLIB_PATH, LDR_*,LIBPATH,DYLD_*
#

#
# If dzdo cannot find a command in the users PATH, it will (by default)
# indicate this to the user with an error statement. Some sites may wish to
# avoid this to obfuscate whether the command was prevented, or simply
# not found. When set to true dzdo will indicate if a command could not
# be found. Default is true.
#
# dzdo.path_info: true
#

#
# Controls whether a short lecture is printed before the password prompt.
# Possible values are 'once', 'never' and 'always'.  Default is 'once'.
#
# dzdo.lecture: once
#

#
# By default dzdo's lecture is builtin.  However, it can be read from a file
# specified by the dzdo.lecture_file option, which should contain the full path
# to a text file.
# Default is empty (use builtin lecture).
#
# dzdo.lecture_file:
#

#
# By default, dzdo stores an authentication ticket once per user.
# Enabling this option causes dzdo to require authentication once per-tty.
# Default is off.
#
# dzdo.tty_tickets: false
#

#
# The message displayed when a user fails to authenticate correctly.
# Default is "Sorry, try again."
#
# dzdo.badpass_message: "Sorry, try again."
#

#
# The directory where dzdo stores timestamp files, default is /var/run/dzdo
#
# dzdo.timestampdir: /var/run/dzdo
#

#
# The number of minutes between operations during which a dzdo user need not
# re-authenticate.  Default is 5 minutes.
#
# dzdo.timestamp_timeout: 5
#

#
# The number of minutes before the dzdo password prompt times out.
# Default is 5 minutes.
#
# dzdo.passwd_timeout: 5
#

#
# By default, dzdo log both valid and invalid command execution.
# disabling it will cause dzdo to log only invalid command execution.
# default is true.
#
# dzdo.log_good: true
#

#
# The default match path for dzdo and dzsh commands
#
# dz.user.path: "/bin:/usr/bin:/usr/local/bin"
# dz.system.path: "/sbin:/usr/sbin:/usr/local/sbin"
#

#
# The name of the Operating System in the Active Directory computer object
# This field is dynamically determined, but can be overridden here if desired
# Changing this property requires a restart of adclient
#
# adclient.os.name: <dynamically determined by uname>
#
#

# The version of the Operating System in the Active Directory computer object
# This field is dynamically determined, but can be overridden here if desired
# Changing this property requires a restart of adclient
#
# adclient.os.version: <dynamically determined by uname>
#

#
# By default users are allowed to login using their Active Directory
# displayName or CN. If a conflict between two users is detected the login
# will fail.   This does require two more searches when a user is not found
# in Active Directory and hence may incur a performance penalty in domains
# with heavily loaded servers or large user populations.
#
# adclient.user.lookup.display: true
# adclient.user.lookup.cn: true
#

#
# Allow computer principals to be treated as users with login capabilities
# when added to the zone.   This is required to support DFS with samba.
# This may incur a performance penalty in domains with heavily loaded
# servers or large user and computer populations
#
# adclient.user.computers: true
#

#
# Determines the period of time (in days) that a password can be used
# before the system requires the user to change it. You can set passwords
# to expire after a number of days between 1 and 999, or you can specify
# that passwords never expire by setting the number of days to 0.
#
# If the maximum password age is between 1 and 999 days, the Minimum
# password age must be less than the maximum password age. If the maximum
# password age is set to 0, the minimum password age can be any value
# between 0 and 998 days.
# Default: 90.
#
# This parameter is controlled by the Group Policy
#      "Computer Configuration"
#      -> "Windows Settings"
#         -> "Security Settings"
#            -> "Password Policy"
#               -> "Maximum password age"
#
# Note this is a Domain Controller Security setting and must be controlled
# using Windows Group Policy.  Changing the value in this file will have no
# effect.
#
# secedit.system.access.maximumpasswordage: 42
#

#
# Determines the period of time (in days) that a password must be used
# before the user can change it. You can set a value between 1 and 998
# days, or you can allow changes immediately by setting the number of
# days to 0.
#
# The minimum password age must be less than the Maximum password age,
# unless the maximum password age is set to 0, indicating that passwords
# will never expire. If the maximum password age is set to 0, the minimum
# password age can be set to any value between 0 and 998.
# Default: 0
#
# This parameter is controlled by the Group Policy
#      "Computer Configuration"
#      -> "Windows Settings"
#         -> "Security Settings"
#            -> "Password Policy"
#               -> "Minimum password age"
#
# Note this is a Domain Controller Security setting and must be controlled
# using Windows Group Policy.  Changing the value in this file will have no
# effect.
#
# secedit.system.access.minimumpasswordage: 0
#

# Determines the number of minutes a locked-out account remains locked out
# before automatically becoming unlocked. The available range is from 0
# minutes through 99,999 minutes. If you set the account lockout duration
# to 0 or -1, the account will be locked out until an administrator explicitly
# unlocks it.
# Default: 30
#
# This parameter is controlled by the Group Policy
#      "Computer Configuration"
#      -> "Windows Settings"
#         -> "Security Settings"
#            -> "Account Lockout Policy"
#               -> "Account lockout duration"
#
# Manually changing the value in this file only effects disconnected mode
# login attempts and, once the connection with the DC is re-established and
# the machine group policies are updated, the settings will revert back to
# Windows group policy settings.
#
# secedit.system.access.lockoutduration: 30
#

# Account lockout threshold
#
# This security setting determines the number of failed logon attempts
# that causes a user account to be locked out. A locked-out account cannot
# be used until it is reset by an administrator or until the lockout duration
# for the account has expired. You can set a value between 0 and 999 failed
# logon attempts. If you set the value to 0, the account will never be
# locked out.
#
# Failed password attempts against workstations or member servers that
# have been locked using password-protected screen savers count as failed
# logon attempts.
#
# Default: 0.
#
# This parameter is controlled by the Group Policy
#      "Computer Configuration"
#      -> "Windows Settings"
#         -> "Security Settings"
#            -> "Account Lockout Policy"
#               -> "Account lockout threshold"
#
# Manually changing the value in this file only effects disconnected mode
# login attempts and, once the connection with the DC is re-established and
# the machine group policies are updated, the settings will revert back to
# Windows group policy settings.
#
# secedit.system.access.lockoutbadcount: 0
#

#
# addns is Centrify's dynamic dns update command line utility.  It can be invoked
# automatically be adclient during startup and in response to a network change
# signal. Network change signals are currently only supported by the Macintosh.
#
# Use this key to control whether or not addns will be invoked by adclient.
# The default setting on the Macintosh is true.
# For all other platforms the default setting is false.
#
# adclient.dynamic.dns.enabled: false


#
# Periodically update the DNS records for this host.
# By default this feature is disabled because it is set to zero seconds.
# To enable this feature put the number of seconds between refresh attempts.
# adclient.dynamic.dns.refresh.interval: 0

#
# The following key controls the command line options used if adclient is
# configured to invoke addns.
#
# The default is /usr/sbin/addns -U -m
# To force addns to update the records even if they have not changed,
# add a --force to the command line
#
# Note! For some systems it is necessary to include your DNS domain name
# on the addns command line.
#
# Refer to addns documentation for command option details.
#
# adclient.dynamic.dns.command: /usr/sbin/addns -U -m --verbose

#
# Specify the minimum free disk space in KB that required for
# Group Policy update. If free disk space of any folder specified
# in gp.disk.space.check.folders is lower than this value, then
# Group Policy settings will not be updated.
# Default is 5120 KBytes.  0 means "do't check free disk space".
#
# gp.disk.space.min: 5120
#

#
# Specify the folders that need to check free disk space. If free
# space of any specified folder is lower than the value specified
# in gp.disk.space.min, then Group Policy settings will not be updated.
# Default is "/,/etc,/var".
#
# gp.disk.space.check.folders: /,/etc,/var
#

#
# Generally, We will check the /<user home directory>/.setgrpsrc file 
# when adclient getting user's group IDs.
# If this option is set to true, adclient will not check the .setgrpsrc
# file and act as there's not this file
#
# The default is false
#
# adclient.ignore.setgrpsrc: false
#


# What's the name of the system nobody user
nss.nobody.user: nobody
nss.nobody.group: nobody
# DO NOT use -1 here.  See setresuid().
nss.nobody.uid: 99
nss.nobody.gid: 99

# Don't call Centrify group or user iteration for these programs
# This helps prevent adding local users and groups that conflict with
# DirectControl users in AD
nss.program.ignore: useradd,adduser,groupadd,addgroup,userdel,groupdel,usermod,groupmod,chfn,chsh,chpasswd,gpasswd,pwconv,pwunconv,grpconv,grpunconv,redhat-config-users

# Debian appears to use an empty shell
# nss.shell.nologin: /sbin/nologin
nss.shell.nologin:


# Skeleton directory for creating new user home directory
# If you leave this value commented out then the default value,
# /etc/skel, will be used. If you do not wish to have files
# copied from a skeleton directory, uncomment this property and
# point to an empty directory.
#
# pam.homeskel.dir: /etc/skel
#

################################################################################
# Auto Zone (AUTO SCHEMA) Settings
#


# This parameter allows administrators to manually specify a unique prefix for each
# trusted domain.  This prefix must be in the range of 0-511 and is used
# with the lower 22 bits of a user's or group's RID to generate a unique 31
# bit Unix UID or GID.
#  
# If domain prefixes are not manually specified, adclient will instead use
# the lower 9 bits of the last domain sub authority from the user's or group's
# SID as the domain prefix. This is not guaranteed to generate unique UIDs and
# GIDs, unless you only have one domain, but the liklihood of a collision
# is small, for a small number of trusted domains.
#
# The format of this field is:  auto.schema.domain.prefix.<domain.name>: n
# and you specify a unique prefix for each trusted domain in your enterprise.
#
# Examples
#
# auto.schema.domain.prefix.bar.com: 1
# auto.schema.domain.prefix.foo.bar.com: 2


#
# This parameter allows Auto Zone installations to designate the
# default shell. You must run adflush to flush the cache after changing 
# this value.
#
# Controlled by Group Policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Auto Zone default shell"
#
# auto.schema.shell: /bin/bash
#

#
# This parameter allows Auto Zone installations to designate the
# home Directory.
# You must run adflush to flush the cache after changing 
# this value.
#
# Controlled by Group Policy under the setting
#      "Computer Configuration"
#      -> "Centrify Settings"
#         -> "DirectControl Settings"
#            -> "Adclient Settings"
#               -> "Auto Zone home directory"
# On Darwin
# auto.schema.homedir: /Users
# On Linux
# auto.schema.homedir: /home
#

#
# This parameter allows Auto Zone installations to control how the
# user's unix name is generated from the Active Directory name.
# You must run adflush to flush the cache after changing 
# this value.
#
# Currently supported formats are:
#   SAM@domainName     - User@AD_DOMAIN    Joe@ACME.COM
#   NTLM               - DOMAIN<NSEP>User  ACME+Joe
#   SAM                - User              Joe
#
# The first 'adclient.ntlm.separators' key value
# determines the actual NTLM separator character.
#
# auto.schema.name.format: SAM

#
# This parameter allows Auto Zone installations to designate user's GID 
# to be set to the user's UID. If this value is set to false and 
# auto.schema.primary.gid is not set. Then the user AD primary group will be 
# used as the user's GID. If the user does not have an AD primary group then 
# the user's GID will be set to the group "nobody". You must run adflush to
# flush the cache after changing this value.
#
# On Darwin
# auto.schema.private.group: false
# On Linux
# auto.schema.private.group: true
#

#
# This parameter allows Auto Zone installations to designate a specific
# GID as the default primary group for all users.  
# This parameter is only used if auto.schema.private.group is set to false.
#
# On Darwin
# auto.schema.primary.gid: 20
# On Linux
# auto.schema.primary.gid:
#

#
# This parameter allows Auto Zone installations to do user/group iteration
# to be ONLY over the cached user/groups
#
# auto.schema.iterate.cache: false

#
# Convert user name to lower case in Auto Zone. This will affect
# user home directory as well.
#
# auto.schema.name.lower: true

#
# This parameter limits the number of objects (user/group) that are returned 
# from searches. You must restart adclient to have this take effect.
#
# auto.schema.search.return.max: 1000
